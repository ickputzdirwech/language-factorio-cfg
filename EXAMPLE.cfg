[this-is-a-category]
this-is-a-string=This is a localisation.
# This is a comment.
; You can use a semicolon for comments as well.

numeric-parameters=You can use parameters from __1__ up to __20__. They need to be defined in the prototype.
plural-for-parameter=Depending on the language you might have to use plural parameters for things like number of days: __1__ __plural_for_parameter_1_{1=day|rest=days}__ or the n'th day: __2____plural_for_parameter_2_{ends in 1=st|ends in 2=nd|ends in 3=rd|rest=th}__
build-in-parameters=You can use __ENTITY__entity-name__, __ITEM__item-name__ and __FLUID__fluid-name__ to insert the name of an entity, item or fluid.
control-parameters=There are also parameters for __CONTROL__string__, __ALT_CONTROL__1__string__, __ALT_CONTROL__2__string__, __CONTROL_MODIFIER__string__ and __CONTROL_MOVE__ for the key kombination assigned to that control setting or custom-input.

line-break=As usual this\ncreates a line break.
build-in-styles=There are build in styles for __CONTROL_STYLE_BEGIN__controls__CONTROL_STYLE_END__ and __REMARK_COLOR_BEGIN__remarks__REMARK_COLOR_END__.

rich-text-color=You can either choose a [color=yellow]pre defined color[.color] or define your own. For example: [color=1,0,0]red[/color], [color=0,255,0]green[.color] or [color=#0000FF]blue[/color]. Both "." and "/" can be used to close the argument.
# The pre defined colors are: default, red, green, blue, orange, yellow, pink, purple, white, black, gray, brown, cyan, acid

rich-text-font=You can either chose a [font=heading-1]base game font[/font] or reference a [font=font-name]modded font[.font].
# The base game fonts are: compi, compilatron-message-font, count-font, default, default-bold, default-dialog-button, default-dropdown, default-game, default-large, default-large-bold, default-large-semibold, default-listbox, default-semibold, default-small, default-small-bold, default-small-semibold, default-tiny-bold, heading-1, heading-2, heading-3, locale-pick, scenario-message-dialog, technology-slot-level-font, var

icon-tag=You can embed icons using: [img=item/item-name] with "class/string" or "class.string". For save file names "." must be used.
# The allowed classes are: item, item-group, entity, technology, recipe, fluid, tile, virtual-signal, achievement, equipment, file, utility.
icon-tag-scenario=With [img=file/sprite_path] you can acces an image in the current scenario folder. It's not recommend to use this since it's quite slow.
icon-tag-sprite-name=Another alternative is to reference a sprite prototype using: [img=sprite-name].

tag-with-name=There are also tags like [entity=entity-name] to reference that prototype.
# The possible tags are: item, item-group, entity, technology, recipe, fluid, tile, virtual-signal, achievement, equipment
tag-with-name-armor=The tag [armor=player-name] embeds the armor of a player.
tag-with-name-blueprint=The tag [special-item=blueprint_string] embeds a blueprint, blueprint book, deconstruction or upgrade planner.

tag-with-number=The tags [train=4] and [train-stop=65] reference a specific train/trainstop. The number is the internal unit number.
position-tag=The tags [gps=8324,321] or [gps=23,43,surface-name] embeds a map location.
tooltip-tag=When howering over [tooltip=this localised text,category.string] a tooltip with the localisation of "category.string" will appear.
